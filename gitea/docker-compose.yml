version: "3.3"

networks:
  appnet:
    external: true

services:
  pg:
    image: postgres:11-alpine
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
      - ./pgscripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=root
    networks:
      - appnet
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=false"

  pgweb:
    image: sosedoff/pgweb:latest
    depends_on:
      - pg
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.pgweb.rule=Host(`supersekrit.dfg.rocks`)"
      - "traefik.http.services.pgweb.loadbalancer.server.port=8081"
      - "traefik.http.routers.pgweb.entrypoints=web"
      - "traefik.http.routers.pgweb.tls.certresolver=mydnschallenge"
      - "traefik.http.middlewares.blog.redirectscheme.scheme=https"
    networks:
      - appnet

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    command: gitea web --config /etc/gitea/app.ini
    # user: git
    depends_on:
      - pg
    environment:
      - USER_UID=1001
      - USER_GID=1003
      - ROOT_URL=https://git.dfg.rocks
      - SSH_DOMAIN=dfg.rocks
      - SSH_PORT=22
      - SSH_LISTEN_PORT=122
      - DB_TYPE=postgres
      - DB_HOST=pg:5432
      - DB_USER=gitea
      - DB_PASSWD=
      - DB_NAME=gitea
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`git.dfg.rocks`)"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "traefik.http.routers.gitea.entrypoints=web"
      - "traefik.http.routers.gitea.tls.certresolver=mydnschallenge"
    volumes:
      - ./volumes/gitea:/data
      - ./gitea:/etc/gitea
    ports:
      - '122:22'
    networks:
      - appnet

  drone:
    image: drone/drone:latest
    # container_name: drone
    volumes:
      - ./volumes/drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - gitea
      - pg
    environment:
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_DEBUG=true
      - DRONE_AGENTS_ENABLED=true
      - DRONE_GITEA_CLIENT_ID=
      - DRONE_GITEA_CLIENT_SECRET=
      - DRONE_GITEA_SERVER=https://git.dfg.rocks
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_RPC_SECRET=
      - DRONE_SERVER_HOST=drone.dfg.rocks
      - DRONE_SERVER_PROTO=https
      - DRONE_USER_CREATE=username:dan,machine:false,admin:true
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://drone@pg:5432/drone?sslmode=disable
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.drone.rule=Host(`drone.dfg.rocks`)"
      - "traefik.http.services.drone.loadbalancer.server.port=80"
      - "traefik.http.routers.drone.entrypoints=web"
      - "traefik.http.routers.drone.tls.certresolver=mydnschallenge"
    ports:
      - 9000:9000
    networks:
      - appnet

  drone-agent:
    image: drone/agent:latest
    command: agent
    depends_on:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=false"
    environment:
      - DRONE_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_RPC_HOST=drone.dfg.rocks
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_DUMP_HTTP=true
      - DRONE_RPC_SECRET=
      - DRONE_RPC_SKIP_VERIFY=false
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME="local"
    networks:
      - appnet
